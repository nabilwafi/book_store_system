syntax = "proto3";

package bookstore;

option go_package = "github.com/nabil/book-store-system/proto";

// User service
service UserService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
}

// Category service
service CategoryService {
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  rpc GetCategories(GetCategoriesRequest) returns (GetCategoriesResponse);
  rpc GetCategory(GetCategoryRequest) returns (GetCategoryResponse);
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
}

// Book service
service BookService {
  rpc CreateBook(CreateBookRequest) returns (CreateBookResponse);
  rpc GetBooks(GetBooksRequest) returns (GetBooksResponse);
  rpc GetBook(GetBookRequest) returns (GetBookResponse);
  rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse);
  rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse);
  rpc GetBooksByCategory(GetBooksByCategoryRequest) returns (GetBooksByCategoryResponse);
}

// Order service
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
}

// Report service
service ReportService {
  rpc GetSalesReport(GetSalesReportRequest) returns (GetSalesReportResponse);
  rpc GetTopBooks(GetTopBooksRequest) returns (GetTopBooksResponse);
  rpc GetBookPriceStatistics(GetBookPriceStatisticsRequest) returns (GetBookPriceStatisticsResponse);
}

// User messages
message User {
  uint32 id = 1;
  string name = 2;
  string email = 3;
  string role = 4;
  string created_at = 5;
  string updated_at = 6;
}

message RegisterRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message RegisterResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  string token = 3;
  User user = 4;
}

message GetProfileRequest {
  string token = 1;
}

message GetProfileResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

// Category messages
message Category {
  uint32 id = 1;
  string name = 2;
  string created_at = 3;
  string updated_at = 4;
}

message CreateCategoryRequest {
  string name = 1;
  string token = 2;
}

message CreateCategoryResponse {
  bool success = 1;
  string message = 2;
  Category category = 3;
}

message GetCategoriesRequest {
  int32 page = 1;
  int32 limit = 2;
}

message GetCategoriesResponse {
  bool success = 1;
  string message = 2;
  repeated Category categories = 3;
  int32 total = 4;
  int32 current_page = 5;
  int32 total_pages = 6;
  bool has_next = 7;
  bool has_previous = 8;
}

message GetCategoryRequest {
  uint32 id = 1;
}

message GetCategoryResponse {
  bool success = 1;
  string message = 2;
  Category category = 3;
}

message UpdateCategoryRequest {
  uint32 id = 1;
  string name = 2;
  string token = 3;
}

message UpdateCategoryResponse {
  bool success = 1;
  string message = 2;
  Category category = 3;
}

message DeleteCategoryRequest {
  uint32 id = 1;
  string token = 2;
}

message DeleteCategoryResponse {
  bool success = 1;
  string message = 2;
}

// Book messages
message Book {
  uint32 id = 1;
  string title = 2;
  string author = 3;
  double price = 4;
  int32 stock = 5;
  int32 year = 6;
  uint32 category_id = 7;
  string image_base64 = 8;
  string created_at = 9;
  string updated_at = 10;
  Category category = 11;
}

message CreateBookRequest {
  string title = 1;
  string author = 2;
  double price = 3;
  int32 stock = 4;
  int32 year = 5;
  uint32 category_id = 6;
  string image_base64 = 7;
  string token = 8;
}

message CreateBookResponse {
  bool success = 1;
  string message = 2;
  Book book = 3;
}

message GetBooksRequest {
  int32 page = 1;
  int32 limit = 2;
  string search = 3;
}

message GetBooksResponse {
  bool success = 1;
  string message = 2;
  repeated Book books = 3;
  int32 total = 4;
  int32 current_page = 5;
  int32 total_pages = 6;
  bool has_next = 7;
  bool has_previous = 8;
}

message GetBookRequest {
  uint32 id = 1;
}

message GetBookResponse {
  bool success = 1;
  string message = 2;
  Book book = 3;
}

message UpdateBookRequest {
  uint32 id = 1;
  string title = 2;
  string author = 3;
  double price = 4;
  int32 stock = 5;
  int32 year = 6;
  uint32 category_id = 7;
  string image_base64 = 8;
  string token = 9;
}

message UpdateBookResponse {
  bool success = 1;
  string message = 2;
  Book book = 3;
}

message DeleteBookRequest {
  uint32 id = 1;
  string token = 2;
}

message DeleteBookResponse {
  bool success = 1;
  string message = 2;
}

message GetBooksByCategoryRequest {
  uint32 category_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message GetBooksByCategoryResponse {
  bool success = 1;
  string message = 2;
  repeated Book books = 3;
  int32 total = 4;
  int32 current_page = 5;
  int32 total_pages = 6;
  bool has_next = 7;
  bool has_previous = 8;
}

// Order messages
message OrderItem {
  uint32 id = 1;
  uint32 book_id = 2;
  int32 quantity = 3;
  double price = 4;
  Book book = 5;
}

message Order {
  uint32 id = 1;
  uint32 user_id = 2;
  double total_price = 3;
  string status = 4;
  string payment_url = 5;
  string created_at = 6;
  string updated_at = 7;
  User user = 8;
  repeated OrderItem items = 9;
}

message CreateOrderRequest {
  repeated OrderItemRequest items = 1;
  string token = 2;
}

message OrderItemRequest {
  uint32 book_id = 1;
  int32 quantity = 2;
}

message CreateOrderResponse {
  bool success = 1;
  string message = 2;
  Order order = 3;
}

message GetOrdersRequest {
  string token = 1;
  int32 page = 2;
  int32 limit = 3;
}

message GetOrdersResponse {
  bool success = 1;
  string message = 2;
  repeated Order orders = 3;
  int32 total = 4;
  int32 current_page = 5;
  int32 total_pages = 6;
  bool has_next = 7;
  bool has_previous = 8;
}

message GetOrderRequest {
  uint32 id = 1;
  string token = 2;
}

message GetOrderResponse {
  bool success = 1;
  string message = 2;
  Order order = 3;
}

message UpdateOrderStatusRequest {
  uint32 id = 1;
  string status = 2;
  string token = 3;
}

message UpdateOrderStatusResponse {
  bool success = 1;
  string message = 2;
  Order order = 3;
}

message ProcessPaymentRequest {
  uint32 order_id = 1;
  string token = 2;
}

message ProcessPaymentResponse {
  bool success = 1;
  string message = 2;
  string payment_url = 3;
}

// Report messages
message SalesReportItem {
  string date = 1;
  double total_sales = 2;
  int32 total_orders = 3;
}

message GetSalesReportRequest {
  string start_date = 1;
  string end_date = 2;
  string token = 3;
}

message GetSalesReportResponse {
  bool success = 1;
  string message = 2;
  repeated SalesReportItem report = 3;
  double total_revenue = 4;
}

message TopBookItem {
  Book book = 1;
  int32 total_sold = 2;
}

message GetTopBooksRequest {
  int32 limit = 1;
  string token = 2;
}

message GetTopBooksResponse {
  bool success = 1;
  string message = 2;
  repeated TopBookItem books = 3;
}

message GetBookPriceStatisticsRequest {
  string token = 1;
}

message GetBookPriceStatisticsResponse {
  bool success = 1;
  string message = 2;
  double max_price = 3;
  double min_price = 4;
  double avg_price = 5;
  int32 total_books = 6;
}